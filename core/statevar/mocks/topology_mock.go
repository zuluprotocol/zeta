// Code generated by MockGen. DO NOT EDIT.
// Source: code.zetaprotocol.io/vega/core/statevar (interfaces: Topology)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	validators "code.zetaprotocol.io/vega/core/validators"
	gomock "github.com/golang/mock/gomock"
)

// MockTopology is a mock of Topology interface.
type MockTopology struct {
	ctrl     *gomock.Controller
	recorder *MockTopologyMockRecorder
}

// MockTopologyMockRecorder is the mock recorder for MockTopology.
type MockTopologyMockRecorder struct {
	mock *MockTopology
}

// NewMockTopology creates a new mock instance.
func NewMockTopology(ctrl *gomock.Controller) *MockTopology {
	mock := &MockTopology{ctrl: ctrl}
	mock.recorder = &MockTopologyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTopology) EXPECT() *MockTopologyMockRecorder {
	return m.recorder
}

// AllNodeIDs mocks base method.
func (m *MockTopology) AllNodeIDs() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AllNodeIDs")
	ret0, _ := ret[0].([]string)
	return ret0
}

// AllNodeIDs indicates an expected call of AllNodeIDs.
func (mr *MockTopologyMockRecorder) AllNodeIDs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AllNodeIDs", reflect.TypeOf((*MockTopology)(nil).AllNodeIDs))
}

// Get mocks base method.
func (m *MockTopology) Get(arg0 string) *validators.ValidatorData {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*validators.ValidatorData)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockTopologyMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockTopology)(nil).Get), arg0)
}

// GetTotalVotingPower mocks base method.
func (m *MockTopology) GetTotalVotingPower() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTotalVotingPower")
	ret0, _ := ret[0].(int64)
	return ret0
}

// GetTotalVotingPower indicates an expected call of GetTotalVotingPower.
func (mr *MockTopologyMockRecorder) GetTotalVotingPower() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTotalVotingPower", reflect.TypeOf((*MockTopology)(nil).GetTotalVotingPower))
}

// GetVotingPower mocks base method.
func (m *MockTopology) GetVotingPower(arg0 string) int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVotingPower", arg0)
	ret0, _ := ret[0].(int64)
	return ret0
}

// GetVotingPower indicates an expected call of GetVotingPower.
func (mr *MockTopologyMockRecorder) GetVotingPower(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVotingPower", reflect.TypeOf((*MockTopology)(nil).GetVotingPower), arg0)
}

// IsValidator mocks base method.
func (m *MockTopology) IsValidator() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsValidator")
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsValidator indicates an expected call of IsValidator.
func (mr *MockTopologyMockRecorder) IsValidator() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsValidator", reflect.TypeOf((*MockTopology)(nil).IsValidator))
}

// IsValidatorZetaPubKey mocks base method.
func (m *MockTopology) IsValidatorZetaPubKey(arg0 string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsValidatorZetaPubKey", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsValidatorZetaPubKey indicates an expected call of IsValidatorVegaPubKey.
func (mr *MockTopologyMockRecorder) IsValidatorZetaPubKey(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsValidatorZetaPubKey", reflect.TypeOf((*MockTopology)(nil).IsValidatorVegaPubKey), arg0)
}

// SelfNodeID mocks base method.
func (m *MockTopology) SelfNodeID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelfNodeID")
	ret0, _ := ret[0].(string)
	return ret0
}

// SelfNodeID indicates an expected call of SelfNodeID.
func (mr *MockTopologyMockRecorder) SelfNodeID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelfNodeID", reflect.TypeOf((*MockTopology)(nil).SelfNodeID))
}
